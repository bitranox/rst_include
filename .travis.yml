language: python
group: travis_latest
dist: xenial
sudo: true

env:
    global:
        - github_master="https://github.com/${TRAVIS_REPO_SLUG}/archive/master.zip"
        - pip_command="pip"
        - python_command="python"
        - WINEDEBUG=fixme-all       # switch off wine fix me messages

addons:
    apt:
        packages:
            - xvfb      # install xvfb virtual framebuffer - this we need for WINE
            - winbind   # needed for WINE

services:   # start services
  - xvfb    # is needed for WINE on headless installation


matrix:
    include:
    - os: windows
      language: sh
      name: "Windows Python 2.7"

      # oddly a secure password under env: global: causes that choco fails
      # so we need to put the option : filter_secrets: false
      # this can be a security issue, check that You dont leak secrets here !
      filter_secrets: false
      before_install:
          - choco install python2
          - export PATH="/c/Python27:/c/Python27/Scripts:$PATH"

    - os: windows
      language: sh
      name: "Windows Python 3.7"

      # oddly a secure password under env: global: causes that choco fails
      # so we need to put the option : filter_secrets: false
      # this can be a security issue, check that You dont leak secrets here !
      filter_secrets: false
      before_install:
        - choco install python3
        - export PATH="/c/Python37:/c/Python37/Scripts:$PATH"

    - os: linux
      language: python
      python: '2.7'

    - os: linux
      language: python
      python: '3.4'

    - os: linux
      language: python
      python: '3.5'

    - os: linux
      language: python
      python: '3.6'
      # we can do that also with env - but we dont want to show it on the travis build overview
      before_install:
        - export deploy_on_pypi="True"

    - os: linux
      language: python
      python: '3.7.1'

    - os: linux
      language: python
      python: '3.7-dev'

    - os: linux
      language: python
      python: 'pypy2.7-6.0'

    - os: linux
      language: python
      python: 'pypy3.5-6.0'

    - os: linux
      language: python
      name: "WINE stable 32 Bit Python 2.7.16, Windows XP"
      env:
          - WINEARCH="win32"
          - WINEPREFIX="${HOME}/wine/wine32"
          - CMDPREFIX="wine"
          - wine_windows_version="winxp"
          - wine_version="stable"
          - wine_python_version="python2"

    - os: linux
      language: python
      name: "WINE stable 64 Bit Python 2.7.16, Windows XP"
      env:
          - WINEPREFIX="${HOME}/wine/wine64"
          - CMDPREFIX="wine"
          - wine_windows_version="winxp"
          - wine_version="stable"
          - wine_python_version="python2"

    - os: linux
      language: python
      name: "WINE stable 32 Bit Python 3.7.3, Windows XP"
      env:
          - WINEARCH="win32"
          - WINEPREFIX="${HOME}/wine/wine32"
          - CMDPREFIX="wine"
          - wine_windows_version="winxp"
          - wine_version="stable"
          - wine_python_version="python3"

    - os: linux
      language: python
      name: "WINE stable 64 Bit Python 3.7.3, Windows XP"
      env:
          - WINEPREFIX="${HOME}/wine/wine64"
          - CMDPREFIX="wine"
          - wine_windows_version="winxp"
          - wine_version="stable"
          - wine_python_version="python3"

    - os: linux
      language: python
      name: "WINE stable 32 Bit Python 2.7.16, Windows 10"
      env:
          - WINEARCH="win32"
          - WINEPREFIX="${HOME}/wine/wine32"
          - CMDPREFIX="wine"
          - wine_windows_version="win10"
          - wine_version="stable"
          - wine_python_version="python2"

    - os: linux
      language: python
      name: "WINE stable 64 Bit Python 2.7.16, Windows 10"
      env:
          - WINEPREFIX="${HOME}/wine/wine64"
          - CMDPREFIX="wine"
          - wine_windows_version="win10"
          - wine_version="stable"
          - wine_python_version="python2"

    - os: linux
      language: python
      name: "WINE stable 32 Bit Python 3.7.3, Windows 10"
      env:
          - WINEARCH="win32"
          - WINEPREFIX="${HOME}/wine/wine32"
          - CMDPREFIX="wine"
          - wine_windows_version="win10"
          - wine_version="stable"
          - wine_python_version="python3"

    - os: linux
      language: python
      name: "WINE stable 64 Bit Python 3.7.3, Windows 10"
      env:
          - WINEPREFIX="${HOME}/wine/wine64"
          - CMDPREFIX="wine"
          - wine_windows_version="win10"
          - wine_version="stable"
          - wine_python_version="python3"

    - os: linux
      language: python
      name: "WINE devel 32 Bit Python 2.7.16, Windows XP"
      env:
          - WINEARCH="win32"
          - WINEPREFIX="${HOME}/wine/wine32"
          - CMDPREFIX="wine"
          - wine_windows_version="winxp"
          - wine_version="devel"
          - wine_python_version="python2"

    - os: linux
      language: python
      name: "WINE devel 64 Bit Python 2.7.16, Windows XP"
      env:
          - WINEPREFIX="${HOME}/wine/wine64"
          - CMDPREFIX="wine"
          - wine_windows_version="winxp"
          - wine_version="devel"
          - wine_python_version="python2"

    - os: linux
      language: python
      name: "WINE devel 32 Bit Python 3.7.3, Windows XP"
      env:
          - WINEARCH="win32"
          - WINEPREFIX="${HOME}/wine/wine32"
          - CMDPREFIX="wine"
          - wine_windows_version="winxp"
          - wine_version="devel"
          - wine_python_version="python3"

    - os: linux
      language: python
      name: "WINE devel 64 Bit Python 3.7.3, Windows XP"
      env:
          - WINEPREFIX="${HOME}/wine/wine64"
          - CMDPREFIX="wine"
          - wine_windows_version="winxp"
          - wine_version="devel"
          - wine_python_version="python3"

    - os: linux
      language: python
      name: "WINE devel 32 Bit Python 2.7.16, Windows 10"
      env:
          - WINEARCH="win32"
          - WINEPREFIX="${HOME}/wine/wine32"
          - CMDPREFIX="wine"
          - wine_windows_version="win10"
          - wine_version="devel"
          - wine_python_version="python2"

    - os: linux
      language: python
      name: "WINE devel 64 Bit Python 2.7.16, Windows 10"
      env:
          - WINEPREFIX="${HOME}/wine/wine64"
          - CMDPREFIX="wine"
          - wine_windows_version="win10"
          - wine_version="devel"
          - wine_python_version="python2"

    - os: linux
      language: python
      name: "WINE devel 32 Bit Python 3.7.3, Windows 10"
      env:
          - WINEARCH="win32"
          - WINEPREFIX="${HOME}/wine/wine32"
          - CMDPREFIX="wine"
          - wine_windows_version="win10"
          - wine_version="devel"
          - wine_python_version="python3"

    - os: linux
      language: python
      name: "WINE devel 64 Bit Python 3.7.3, Windows 10"
      env:
          - WINEPREFIX="${HOME}/wine/wine64"
          - CMDPREFIX="wine"
          - wine_windows_version="win10"
          - wine_version="devel"
          - wine_python_version="python3"

    - os: linux
      language: python
      name: "WINE staging 32 Bit Python 2.7.16, Windows XP"
      env:
          - WINEARCH="win32"
          - WINEPREFIX="${HOME}/wine/wine32"
          - CMDPREFIX="wine"
          - wine_windows_version="winxp"
          - wine_version="staging"
          - wine_python_version="python2"

    - os: linux
      language: python
      name: "WINE staging 64 Bit Python 2.7.16, Windows XP"
      env:
          - WINEPREFIX="${HOME}/wine/wine64"
          - CMDPREFIX="wine"
          - wine_windows_version="winxp"
          - wine_version="staging"
          - wine_python_version="python2"

    - os: linux
      language: python
      name: "WINE staging 32 Bit Python 3.7.3, Windows XP"
      env:
          - WINEARCH="win32"
          - WINEPREFIX="${HOME}/wine/wine32"
          - CMDPREFIX="wine"
          - wine_windows_version="winxp"
          - wine_version="staging"
          - wine_python_version="python3"

    - os: linux
      language: python
      name: "WINE staging 64 Bit Python 3.7.3, Windows XP"
      env:
          - WINEPREFIX="${HOME}/wine/wine64"
          - CMDPREFIX="wine"
          - wine_windows_version="winxp"
          - wine_version="staging"
          - wine_python_version="python3"

    - os: linux
      language: python
      name: "WINE staging 32 Bit Python 2.7.16, Windows 10"
      env:
          - WINEARCH="win32"
          - WINEPREFIX="${HOME}/wine/wine32"
          - CMDPREFIX="wine"
          - wine_windows_version="win10"
          - wine_version="staging"
          - wine_python_version="python2"

    - os: linux
      language: python
      name: "WINE staging 64 Bit Python 2.7.16, Windows 10"
      env:
          - WINEPREFIX="${HOME}/wine/wine64"
          - CMDPREFIX="wine"
          - wine_windows_version="win10"
          - wine_version="staging"
          - wine_python_version="python2"

    - os: linux
      language: python
      name: "WINE staging 32 Bit Python 3.7.3, Windows 10"
      env:
          - WINEARCH="win32"
          - WINEPREFIX="${HOME}/wine/wine32"
          - CMDPREFIX="wine"
          - wine_windows_version="win10"
          - wine_version="staging"
          - wine_python_version="python3"

    - os: linux
      language: python
      name: "WINE staging 64 Bit Python 3.7.3, Windows 10"
      env:
          - WINEPREFIX="${HOME}/wine/wine64"
          - CMDPREFIX="wine"
          - wine_windows_version="win10"
          - wine_version="staging"
          - wine_python_version="python3"

    - os: osx
      language: sh
      name: "osX Python 2.7"

    - os: osx
      language: sh
      name: "osX Python 3.7"
      python: "3.7"
      osx_image: xcode10.2  # Python 3.7.2 running on macOS 10.14.3
      env:
        # on osx pip and python points to python 2.7 - therefore we have to use pip3 and python3 here
        - pip_command="pip3"
        - python_command="python3"


install:
    - chmod +x ./*.sh             # make shellscripts executable
    - chmod +x ./lib_bash/*.sh    # make shellscript lib executable
    - if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then service xvfb status ; fi
    - if [[ ${CMDPREFIX} == "wine" ]]; then ./install_wine.sh ; fi
    - if [[ ${CMDPREFIX} == "wine" ]]; then ./install_wine_machine.sh ; fi
    - if [[ ${wine_python_version} == "python2" ]]; then ./install_wine_python2_preinstalled.sh ; fi
    - if [[ ${wine_python_version} == "python3" ]]; then ./install_wine_python3_preinstalled.sh ; fi
    - if [[ ${CMDPREFIX} == "wine" ]]; then ./install_wine_git_portable.sh ; fi

    - ${CMDPREFIX} ${python_command} -m pip install --upgrade pip
    - if [[ $TRAVIS_PYTHON_VERSION == pypy3.5-6.0 ]]; then ${CMDPREFIX} ${pip_command} install "pytest-cov==2.6.0"; fi
    - ${CMDPREFIX} ${pip_command} install codecov pytest pytest-pep8 pytest-cov dill
    - if [[ -f setup.py ]]; then export setup_py_found="True" && ./lib_bash/lib_color.sh clr_bold clr_green "setup.py found" ; else ./lib_bash/lib_color.sh clr_bold clr_red  "*** no setup.py found, nothing to test" ; fi
    - if [[ "${setup_py_found}" == "True" ]]; then ${CMDPREFIX} ${pip_command} install -e . ; fi

script:
    - if [[ "${setup_py_found}" != "True" ]]; then ./lib_bash/lib_color.sh clr_bold clr_red  "no setup.py found, nothing to test" ; fi
    # - ./lib_bash/lib_color.sh clr_red "test for install option 'setup.py test' is disabled. Enable it if Your setup.py supports the option 'test'"
    - if [[ "${setup_py_found}" == "True" ]]; then ${CMDPREFIX} ${pip_command} install ${github_master} --install-option test ; fi
    - if [[ "${setup_py_found}" == "True" ]]; then ${CMDPREFIX} ${python_command} -m pytest --pep8 --cov ; fi

after_success:
    - ${CMDPREFIX} coverage report
    - ${CMDPREFIX} codecov

    # This works for sure - but might expose the secure password within the matrix,
    # because windows builds need filter_secrets: false at the Moment (2019-04-12)
    # - if [[ ${deploy_on_pypi} == "True" ]] && [[ -n ${TRAVIS_TAG} ]]; then ${CMDPREFIX} ${pip_command} install -U twine ; fi
    # - if [[ ${deploy_on_pypi} == "True" ]] && [[ -n ${TRAVIS_TAG} ]]; then ${CMDPREFIX} ${pip_command} install wheel ; fi
    # - if [[ ${deploy_on_pypi} == "True" ]] && [[ -n ${TRAVIS_TAG} ]]; then ${CMDPREFIX} ${python_command} setup.py sdist bdist_wheel ; fi
    # - if [[ ${deploy_on_pypi} == "True" ]] && [[ -n ${TRAVIS_TAG} ]]; then ${CMDPREFIX} twine upload --repository-url https://upload.pypi.org/legacy/ -u bitranox -p ${pypi_password} dist/* ; fi


# the password needs to be encrypted pointing to ${deploy.password}
# make a backup before adding secrets by travis gem, all comments in the yml files get lost !
# password needs to be created from the project directory for every repository with ruby gem travis:   travis encrypt "*******" --add deploy.password --org
# option --org for travis.org, --com for travis.com

deploy:
  provider: pypi
  user: bitranox
  password:
    secure: uxzN4I6caTU3qP0UrKqsZEj5SHch2ZAY78sq0s/PJQnnFEydAL4Cpc3ljlZBu5aTxeveYxnfI3gSAjz5IgyT5aCmTCO1xzS55KMIky1rW+MO34MFCDcm/DG33sjm5m6cZmWt5YaIJqBPGNntc/FgicRsTS89wbboVKxvFqez6L4IqdjRJ/gNh2kvHXxten4/b5VtUr9rMm+781ozPub1olD2ca7Zw+72IEYd7NJ9c5wvgk6U9Tmzc4FCrWA8oxhLUHFX0Hz01BrJQg+/LwbMMNFUGRBPtecEOw1RtBN31CLENvzruqMoFCZBZXs+8fyVg00xKZ1QbuwnrLhKluK7iOO1exz+vmMIU5aRXZepZmkV4n0E8IfQBQdr3qwku/1AjXduF9gE/m2usqhsg/QaB/GpRydqxRulx23xwbUvNHBulfvh9RtrlmhKTawTSqMFDLy7sLkm7w9NuzTDPzEWfwzS8VqZJlXiLp/L7XVMOqSfAOL6gg1kcIgCyI5Zv6QBzplcitkDj1sXmiaQcCt8P/1uCFH+xudyBKpb5lMayFZMxjiVkxUgrmpfRgMxonYxD7SrOPoyZuRnm+WhXKv4jPtPMJtiZqZKo9qrRx2HHT6TVfgw6mJ2vcGzeiEgl7L8z89AVOtBKskcShppd2gki4SK8kuryFAwBNMNNrEys2k=
  distributions: "sdist bdist_wheel"
  on:
    tags: true    # we release only on PyPi on tagged Releases (Release on Github)
    # python: 3.6  # that would be the usual option, but we can not use it.
    # we need this, because on projects with windows builds only, we can not build on windows, because of
    # the filter_secure issue. So we build on WINE, but need somehow to address the matrix include on which to build
    condition: ${deploy_on_pypi} = "True"
